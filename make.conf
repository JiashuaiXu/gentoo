# These settings were set by the catalyst build script that automatically
# built this stage.
# Please consult /usr/share/portage/config/make.conf.example for a more
# detailed example.
# These settings were set by the catalyst build script that automatically
# built this stage.
# Please consult /usr/share/portage/config/make.conf.example for a more
# detailed example.
COMMON_FLAGS="-march=native -O2 -pipe"
#（无论何种intel、amd的CPU，且无论何种新老CPU架构，均建议-march=native，CPU指令集自动识别全面）  #程序员的用户注意了，“-fomit-frame-pointer"这一项会导致你编译出来的程序无法debug；不做程序开发或debug的普通用户可以放心开启。
CFLAGS="${COMMON_FLAGS}"
CXXFLAGS="${COMMON_FLAGS}"
#FCFLAGS="${COMMON_FLAGS}"
#FFLAGS="${COMMON_FLAGS}"
#LDFLAGS="${COMMON_FLAGS} -Wl,-O2 -Wl,--as-needed -Wl,--hash-style=gnu -Wl,--sort-common -Wl,--strip-all"
MAKEOPTS="-j4"
#（推荐值为CPU中核心/逻辑处理器的数量，可用lscpu命令查看，结果为“CPU(s):”后面的数字）(比如intel core i5 8400是6核心，i7是8核)

CPU_FLAGS_X86="aes avx avx2 f16c fma3 mmx mmxext pclmul popcnt rdrand sse sse2 sse3 sse4_1 sse4_2 ssse3"
#（这是intel core i5 8400的参数，其它cpu参数用cpuid2cpuflags命令看，这里先不用管，暂时注释掉，后面再来配置）

CHOST="x86_64-pc-linux-gnu"
#（64位系统）
EMERGE_DEFAULT_OPTS="--with-bdeps=y --ask --verbose=y --load-average --keep-going --deep"
# NOTE: This stage was built with the bindist Use flag enabled
PORTDIR="/var/db/repos/gentoo"
DISTDIR="/var/cache/distfiles"
PKGDIR="/var/cache/binpkgs"
PORTAGE_TMPDIR="/tmp"
##如果你的内存足够大(8G、16G)，那么建议你把编译程序时存放临时中间文件的目录设置为内存的tmpfs(/tmp目录)，以减少编译时对硬盘的大量读写、延长硬盘使用寿命、并加快编译速度；但如果你的内存较小(<=4G)，那么建议你把此项注释掉，否则很多程序会因内存容量不足而导致编译失败

# This sets the language of build output to English.
# Please keep this setting intact when reporting bugs.
LC_MESSAGES=C

#USE="-bindist -mdev -systemd -consolekit -doc -test -gnome-shell -gnome -gnome-keyring -handbook -gtk -dhcpcd -netifrc -pulseaudio -wayland -oss -gpm -iptables -bluetooth gdbm iwd udev gold icu nftables X staging fortran lto pgo graphite openmp minizip udev blkid efi hwdb smack acpi kde alsa sudo cjk ccache dbus policykit network elogind udisks aria2 dhclient networkmanager connection-sharing wifi ppp jack libsamplerate vdpau vaapi vulkan layers nvidia glamor http2"
ACCEPT_LICENSE="*"
ACCEPT_KEYWORDS="amd64"
#("amd64"是使用稳定版的较旧的软件，"~amd64"是使用不稳定版的更新的软件；建议用稳定版的，免得不稳定的软件包出了问题还要折腾；而且gentoo所谓“稳定版”的“旧”软件相比起debian、ubuntu、centos这些已经很新了，除非你是想像archlinux那样追新)
L10N="en-US zh-CN en zh"
LINGUAS="en-US zh-CN en zh"
AUTO_CLEAN="yes"

GRUB_PLATFORMS="efi-64"
#（UEFI 64位系统引导必须项）

#VIDEO_CARDS="intel i965 iris nvidia"
#（Intel UHD630和nvidia双显卡）
#ALSA_CARDS="hda-intel"
#（intel HD声卡）
#INPUT_DEVICES="libinput synaptics"
#（笔记本电脑的触控板）
#MICROCODE_SIGNATURES="-S"
#（如果想把CPU的microcode直接编译进内核，则需要设置为“-S”；否则注释掉）

LLVM_TARGETS="X86"

GENTOO_MIRRORS="https://mirrors.163.com/gentoo"

#安装完aria2之后去掉注释,具体参数参考aria2官方文档
#FETCHCOMMAND="/usr/bin/aria2c -d \${DISTDIR} -o \${FILE} --allow-overwrite=true --max-tries=5 --max-file-not-found=2 --max-concurrent-downloads=5 --connect-timeout=5 --timeout=5 --split=5 --min-split-size=2M --lowest-speed-limit=20K --max-connection-per-server=9 --uri-selector=feedback \${URI}"
#RESUMECOMMAND="${FETCHCOMMAND}"

#此处先注释掉,配置完ccache后再去掉注释
FEATURES="ccache -test"
CCACHE_DIR="/var/cache/ccache"
